
@{
    /**/

    /**/

    ViewBag.Title = "Indexs";
    Layout = "~/Views/Boss.cshtml";
}
<script src="~/layui/layui.all.js"></script>
<script src="~/layui/layui.js"></script>
<link href="~/layui/css/layui.css" rel="stylesheet" />
<link href="~/layui/css/layui.mobile.css" rel="stylesheet" />
<form class="layui-form" action="" id='fm1' lay-filter="example">
    <div class="layui-form-item">
        <label class="layui-form-label">性别</label>
        <div class="layui-input-block">
            <input type="radio" name="sex" value="0" title="男" v-model='user.sex' checked="">
            <input type="radio" name="sex" value="1" title="女" v-model='user.sex'>
        </div>
    </div>
</form>

<script src="~/layui-v2.4.5/layui/layui.all.js"></script>
<script>
    window.onload = function () {
        Lay脚本Start
        layui.use(['form', 'layedit', 'laydate'], function () {
            var form = layui.form
                , layer = layui.layer
                , layedit = layui.layedit
                , laydate = layui.laydate;
            //日期
            laydate.render({
                elem: '#date'
            });
            laydate.render({
                elem: '#date1'
            });

            //创建一个编辑器
            var editIndex = layedit.build('LAY_demo_editor');

            //监听指定开关
            form.on('switch(switchTest)', function (data) {
                layer.msg('开关checked：' + (this.checked ? 'true' : 'false'), {
                    offset: '6px'
                });
                layer.tips('温馨提示：请注意开关状态的文字可以随意定义，而不仅仅是ON|OFF', data.othis)
            });

        })
        //LayUI脚本End

        //Vue 脚本Start
        var vm = new Vue({
            el: '#fm1',
            data: { user: { username: '', userpwd: '', country: 0, isHun: true, sex: 0, fav: [''], myself: '' } },
            created: function () {
                //一般来说这里会发送ajax请求
                this.user = { username: '张三', userpwd: '123', country: 2, isHun: true, sex: 1, fav: ['read', 'write'], myself: '通天塔' };

                //axios发送ajax
                //axios.get('url').then(function(response){
                //成功时回调 response响应的数据 赋值给this.user
                //})catch(function(error){
                //失败时回调 error失败时的错误消息

                //})
            },
            methods: {
                dataSubmit: function () {
                    //axios.post('url',this.user)
                    //.then(fucntion(response){
                    //提交成功回调
                    //})
                    //.catch(function(error){
                    //提交失败回调
                    //})

                    //获取需保存的信息 位于this.user中

                    layer.open({ title: '获取表单数据', content: JSON.stringify(this.user) });

                }
            }
        });
        //Vue 脚本End

    };


</script>